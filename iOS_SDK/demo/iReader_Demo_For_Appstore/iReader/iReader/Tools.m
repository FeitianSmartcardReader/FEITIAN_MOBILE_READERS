//
//  Tools.m
//  eID Viewer
//
//  Copyright © 1998-2017, FEITIAN Technologies Co., Ltd. All rights reserved.
//

#import "Tools.h"
#import "commandModel.h"
#import "SVProgressHUD.h"
#import <ifaddrs.h>
#import <arpa/inet.h>

@implementation Tools
static Tools *_instance;
+(instancetype)allocWithZone:(struct _NSZone *)zone
{
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        if (_instance == nil) {
            _instance = [super allocWithZone:zone];
        }
    });
    return _instance;
}

+(instancetype)shareTools
{
    return [[self alloc]init];
}

-(id)copyWithZone:(NSZone *)zone
{
    return _instance;
}
-(id)mutableCopyWithZone:(NSZone *)zone
{
    return _instance;
}

-(void)showMsg:(NSString *)msg
{
    dispatch_async(dispatch_get_main_queue(), ^{
        [SVProgressHUD showWithStatus:msg maskType:SVProgressHUDMaskTypeBlack];
    });
}

-(void)hideMsgView
{
    dispatch_async(dispatch_get_main_queue(), ^{
        [SVProgressHUD dismiss];
    });
}

-(void)showError:(NSString *)error
{
    dispatch_async(dispatch_get_main_queue(), ^{
        [SVProgressHUD showErrorWithStatus:error maskType:SVProgressHUDMaskTypeBlack];
    });
}

-(BOOL)getHexDataFormString:(NSString *)text withBuf:(unsigned char *)pbuf
                     AndLen:(unsigned int *)pLen
{
    
    unsigned  int capdulen;
    unsigned char capdu[512];
    
    NSString* tempBuf = [NSString string];
    
    if([text length] < 2 ) {
        
        *pLen = 0;
        return TRUE;
    }
    
    tempBuf = text;
    
    //  NSString* comand = [tempBuf stringByAppendingString:@"\n"];
    const char *buf = [tempBuf UTF8String];
    NSMutableData *data = [NSMutableData data];
    uint32_t len = strlen(buf);
    
    //to hex
    char singleNumberString[3] = {'\0', '\0', '\0'};
    uint32_t singleNumber = 0;
    for(uint32_t i = 0 ; i < len; i+=2) {
        if ( ((i+1) < len) && isxdigit(buf[i]) && (isxdigit(buf[i+1])) ) {
            singleNumberString[0] = buf[i];
            singleNumberString[1] = buf[i + 1];
            sscanf(singleNumberString, "%x", &singleNumber);
            uint8_t tmp = (uint8_t)(singleNumber & 0x000000FF);
            [data appendBytes:(void *)(&tmp) length:1];
        } else {
            break;
        }
    }
    
    [data getBytes:capdu];
    capdulen = [data length];
    
    if (*pLen < capdulen ) {
        return FALSE;
    }
    *pLen = capdulen;
    memcpy(pbuf, capdu, *pLen);
    return TRUE;
    
}

-(NSString *)getStringFormHexData:(unsigned char *)buf withLen:( int )len
{
    NSMutableData *tmpData = [NSMutableData data];
    [tmpData appendBytes:buf length:len];
    
    NSString* dataString= [NSString stringWithFormat:@"%@",tmpData];
    NSRange begin = [dataString rangeOfString:@"<"];
    NSRange end = [dataString rangeOfString:@">"];
    NSRange range = NSMakeRange(begin.location + begin.length, end.location- begin.location - 1);
    dataString = [dataString substringWithRange:range];
    
    return dataString;
    
}

-(NSData *)readFileContent:(NSString *)fileName
{
    NSString *filePath = [[NSBundle mainBundle] pathForResource:@"flash.txt" ofType:nil];
    
    NSData *fileData = [[NSData alloc] initWithContentsOfFile:filePath];
    NSString *srcString = [[NSString alloc] initWithData:fileData  encoding:NSUTF8StringEncoding];;
    NSString *desString = [srcString stringByReplacingOccurrencesOfString:@"\r\n" withString:@""];
    fileData = [desString dataUsingEncoding:NSUTF8StringEncoding];
    return fileData;
}

//save log to file
-(void)logToFile
{
    NSString * documentDirectory = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES).lastObject;
    NSDateFormatter *dateformat = [[NSDateFormatter  alloc]init];
    [dateformat setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSString *fileName = [NSString stringWithFormat:@"LOG-%@.txt",[dateformat stringFromDate:[NSDate date]]];
    NSString *path = [documentDirectory stringByAppendingPathComponent:fileName];
    _logFilePath = path;
    [[NSFileManager defaultManager] createFileAtPath:path contents:nil attributes:nil];
    
    freopen([path cStringUsingEncoding:NSASCIIStringEncoding], "a+", stdout);
    freopen([path cStringUsingEncoding:NSASCIIStringEncoding], "a+", stderr);
}

- (BOOL)isApduValid:(unsigned char *)apdu apduLen:(unsigned int)apduLen
{
    if (apdu[0] == 0x80 && (apduLen == 6 || apduLen == 7)) {
        return YES;
    }
    
    if(apduLen == 4 || apduLen == 5) {
        
    }else if(apduLen-5 == apdu[4]) {
        
    }else if(apduLen-8 == apdu[6]*0x100+apdu[7]) {
        
    }else if(apduLen-7 == apdu[5]*0x100+apdu[6]) {
        
    }else if(apduLen-8 == apdu[5]*0x100+apdu[6]) {
        
    }else if(apduLen-6 == apdu[4]) {
        
    }else if(apduLen-12 == apdu[6]*0x100+apdu[7]) {
        
    }else {
        return NO;
    }
    
    return YES;
}

- (NSString *)getIPAddress {
    NSString *address = @"error";
    struct ifaddrs *interfaces = NULL;
    struct ifaddrs *temp_addr = NULL;
    int success = 0;
    // 检索当前接口,在成功时,返回0
    success = getifaddrs(&interfaces);
    if (success == 0) {
        // 循环链表的接口
        temp_addr = interfaces;
        while(temp_addr != NULL) {
            if(temp_addr->ifa_addr->sa_family == AF_INET) {
                // 检查接口是否en0 wifi连接在iPhone上
                if([[NSString stringWithUTF8String:temp_addr->ifa_name] isEqualToString:@"en0"]) {
                    // 得到NSString从C字符串
                    address = [NSString stringWithUTF8String:inet_ntoa(((struct sockaddr_in *)temp_addr->ifa_addr)->sin_addr)];
                }
            }
            temp_addr = temp_addr->ifa_next;
        }
    }
    // 释放内存
    freeifaddrs(interfaces);
    return address;
}

- (NSArray *)getAPDU
{
    NSFileManager *manager = [NSFileManager defaultManager];
    NSString* uploadDirPath = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES).lastObject;
    uploadDirPath = [uploadDirPath stringByAppendingPathComponent:@"apdu"];
    return [manager contentsOfDirectoryAtPath:uploadDirPath error:nil];
}

-(NSData *)hexFromString:(NSString *)cmd
{
    NSData *cmdData = nil;
    char *pbDest = NULL;
    unsigned int length = 0;
    
    char h1,h2;
    unsigned char s1,s2;
    pbDest = malloc(cmd.length/2 + 1);
    for (int i=0; i<[cmd length]/2; i++)
    {
        
        h1 = [cmd characterAtIndex:2*i];
        h2 = [cmd characterAtIndex:2*i+1];
        
        s1 = toupper(h1) - 0x30;
        if (s1 > 9)
            s1 -= 7;
        
        s2 = toupper(h2) - 0x30;
        if (s2 > 9)
            s2 -= 7;
        
        pbDest[i] = s1*16 + s2;
        length++;
    }
    
    cmdData = [NSData dataWithBytes:pbDest length:length];
    return cmdData;
}


- (void)StrToHex:(unsigned char *)pbDest src:(char *)szSrc len:(unsigned int) dwLen
{
    char h1,h2;
    unsigned char s1,s2;
    
    for (int i=0; i<dwLen; i++)
    {
        h1 = szSrc[2*i];
        h2 = szSrc[2*i+1];
        
        s1 = toupper(h1) - 0x30;
        if (s1 > 9)
            s1 -= 7;
        
        s2 = toupper(h2) - 0x30;
        if (s2 > 9)
            s2 -= 7;
        
        pbDest[i] = s1*16 + s2;
    }
}

- (int)filterStr:(char *)szSrc len:(unsigned int)dwLen
{
    
    for (int i = 0; i < dwLen; i++) {
        if((szSrc[i]>='0')&&(szSrc[i]<='9')){
            continue;
        }
        
        if((szSrc[i]>='a')&&(szSrc[i]<='f')){
            continue;
        }
        
        if((szSrc[i]>='A')&&(szSrc[i]<='F')){
            continue;
        }
        return -1;
    }
    
    return 0;
}

-(NSArray *)commandArray
{
    commandModel *model2 = [commandModel commandModelWithName:@"writeFlash" image:@"WriteFlash"];
    commandModel *model3 = [commandModel commandModelWithName:@"readFlash" image:@"ReadFlash"];
    commandModel *model1 = [commandModel commandModelWithName:@"readUID" image:@"UID"];
    
    return @[model1, model2 ,model3];
}

-(NSArray *)apduArray
{
    return
    @[
      @"0084000004",
      @"0084000008",
      @"FFCA000000",
      @"00B00000FF",
      
      /*
      @"00a4040006112233445566",
  @"00400000000400724183DDDD6234D037FDA7E7DC8EBA9C326EB036314AD4E322D45F06A6B89CD2FBD24A187B9E425D65F05A30E0E588BB3D194B977D1A46E5131D2E9AEBF0E71AAA30EA0938BCEA5D7C69B7B866F862F63345A201ECC076ED30210C413458E29208C32B571CA474F802D2872875AF90759B597E1D8725AC240249C1A38BD8D5639CF4D5AA2F3F28558192922716F25961FDBFA793552F30B110FB1469F75807B4EE29AFAC7A734D9D8011A05E50A907E2E1DEE50A5EC749BDE2A0CF3B81C0C1AE87CB820304292DF788B779752BBCE01FD01E002BABD6417001A1B8C02FF84B79EE431657D54A0E8C20ECE413AF132D4152E7BF9D43425EF1F46498A10BE9ED3CABF83351F6BC3984D018ABE0E596356FEDA1EB082FF5E969435336861D79EF204751A1986E69F60620A39486D42E42D22BB44C1675D529FF77D55C156C91984C49B827D545378D3A99F568AA84C19A929389AA6D1FCC68DC1751D0F9001A31E839948FB084104549C276EEF7FE3886D6AD86CDB534C1EC27AB315BD8E1FA021EA04C9FD032DB675B238FF012497C4EC602147D97BD9BFF09BCDCC55B181B5314054A20DE57803B9745A634A66D743A8B199C81BAC144E7AAD1BAD629AB636CF2F0F5D981FCE60926AF2584597307924D7A84A2C848A3EC31723356EBA5BC94E1E9B5946227F71930E972A6D3621F9D33AE35A8665BA058C727AF0C480B0D150979F21729E39AB2DC7CF762BD42A3A4663C185B3E002371937996C1E9E73E359127142B7D35B71E52EF1A82BF1C7AEF0EAC9482F8411481BEEF503D7540363DA17C8398062737A3BBCA45CC80F78EC6518710E73C265BCE6F124548951FDF7563FFA8266DC0008A3F96DF0AA9DBC6715A54F650B0B6E1A1CF68DEAAF18B2024FD38E99D5A08FB1B05DA5002E1D00A374F9BAD86FFF98C41067B812A308CE19397AFAFC47408109D361EFF7DD1DF426259E59D51CFF745F83BD39792FA2A0A0B5AED636464C7285AF9EB5642210F56389FB82E78C9B9F50C96F689A8F96E84D26D796B45D14D299877C7BC1B78692F024A9FC8C5944682C6406EBD35D25F3530F9DB312F64A3FDA0D73D99CE7EF3B307811FD3FED8A6D66E61C39D003006066F269C1BEAC5D08ABA42D25624DCB7CB916DC2B7EC3FE2D74C207B90D3B969DFD61B43933D9BDCBA2DE01059E53ABD60E6350FDC576F016FA7A620FD741592A9AC015800F28FD07343D87E0BD93F0B584F038EAB07100B85C91B394EACED894A3AFF63CACF48B39F4253A4D4C794AB9D14FCC88AC3CB0900F8A64FEA43E954ACC83EED589D6F8D2573780B1D79E1A5157D4A44E2544802CA7D6FE93901B0FDB59DE67D1423AB67ED1E703A4CB5CDFFAAD2158A1C832EFECAA09F8FA3AEEB8C4F031E9C652BA548DF8B62B9CB4400C3435A84239E162505E8A85ECA9011410761400E",
      @"8050000002001D",
      @"00a404000aa0000004480101010602",
      @"6f0d000000000f0000000020000108241234ffffffffff",
  @"6f390000000010000000002a9e9a333031300d0609608648016503040201050004209ee4349bb91eafdf4bb286d25aaae29e97311465f73126ef9b2ddbf9feaf614a00",
      @"00A40000023F00",
      @"00B0000000",
      @"00a404000b4d61737465722e46696c65",
      @"1A0D00A40400081122334455667788",
      @"1A0D0082000008C643BAB46BE4C2A5",
      @"1B1184F400000C039289BAEF5CEAAF0F34D492",
      @"002241b6050480018482",
      @"0020000108241234ffffffffff",
      @"002a9e9a533051300d060960864801650304020305000440db8fa6e2b208c9ba444ab54216cb0cf06558bb9e6502 1f6d887eb904e1acd852df9891653bf8774c04f0338e2150b99b1f2be4edfbdf56ea9812ea1ac7f27191",

      //test Germany e-Health card
      @"00A4040C06D27600000102",
      @"00B08100C0", //the limit 0xC0 for the answer works here (but there are more than just 0xC0 bytes)
      @"00B08100C1", //the limit 0xC1 fails for FW. v4.31 but works for v.2.41
      @"00B08100000000", //reading without limit fails for FW. v4.31 but works for v.2.41
 @"0C2A00BE00015F8782015101A277BF9041C8FA1E961F0A73DCCEECC37DFD2F9ED6F03EF4C99D05DAB54D389C4BC3BA0052C060B14F9E958629C395EECFE3B329894B920F8ECF5CE7159B610F0231AF4A1AC6688F3D7218BAD8FE42F72394DF1E58D38C76CD16D445F34654561CDBA86FBAC1B6E8058D344B42B301D7751F0F8214CFB115DA824B574720F62C2929716559817EF0745AC84DFD19EB7433CE292363E03B5826C3E3DF2E8851A20B494AB55DB2A0BC89FCBCEE10AFD16C81B3F4E8BCCA0BB29946C8BFC884A08279497D166E0486FB43DCC3C3092F81C4EE4E419F00F72C3E4C24BBAAB244D16AD3B30816502E6008852ABF73F8F580B11817AEB29CEC38C1571D7E3CA7865494C986F91B4C8C146B76F63BD0F8A81F22F3E2875D84CD17A62B98BFE0EC449F2E718079B7507C94B5946BF803F0B43BEFD376A99FF89E6EC0F77C3917028FEEAA69A0ABD8F109DED491C02073A9BAA9638E0892520F9D3BCE85D00000",
      
    @"0084000008",
    @"java card command as follow:",
    @"008400007F",
    @"00A4040008D156000001010301",
    @"00A40000023F00",
    @"00e4010002a001",
    @"00e00000186216820238008302a00185020000860800000000000000ff",
    @"00A4000002A001",
    @"00E00000186216820201018302B001850200ff86080000000000000000",
    @"00D60000FA00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899000102030405060708091011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798990001020304050607080910111213141516171819202122232425262728293031323334353637383940414243444546474849",
    @"00D60000FB0001020304050607080910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697989900010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899000102030405060708091011121314151617181920212223242526272829303132333435363738394041424344454647484950",
    @"00D60000FF000102030405060708091011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798990001020304050607080910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697989900010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354",
    @"00b00000FF",
    @"00A40000023F00",
    @"00A4000002A001",
    @"00e4020002B001",
    @"00A40000023F00",
    @"00e4010002a001",
    @"ben_262 card as follow",
    @"00a404000a01020304050607080900",
    @"8010010600",
    @"8020000001",
    

    @"80300000FA00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899000102030405060708091011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798990001020304050607080910111213141516171819202122232425262728293031323334353637383940414243444546474849",
    @"80300000010600010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899000102030405060708091011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798990001020304050607080910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061",
    @"8010010600",
    @"black-white type B",
    @"00A404000BA000000291A00000019102",
    @"00B201A420",
    @"00B201AC40",
    @"好的之扩展指令select app, write 128,read,write 250,read,write 256,read",
    @"00A40400051122334455",
    @"128bytes",
    @"0001000080f22b672d5c76a1653d7ed0478fdcf7542334f77a7b0c108b74dea5ee276b3f951253d52e73e34b9ef52e38ab8e5fecf8a84db2377f50529aca54da8a9d2b9e9c8e287ec117e967bd3b741dda6c8637ddad276b39f4820b83d2f4d0265563d7582ed1e94c0f408521da0025d613a006bf3b33946c465b89677c74edb81635f5c3",
    @"00020000",
    @"250bytes",
    @"00010000FAf22b672d5c76a1653d7ed0478fdcf7542334f77a7b0c108b74dea5ee276b3f951253d52e73e34b9ef52e38ab8e5fecf8a84db2377f50529aca54da8a9d2b9e9c8e287ec117e967bd3b741dda6c8637ddad276b39f4820b83d2f4d0265563d7582ed1e94c0f408521da0025d613a006bf3b33946c465b89677c74edb81635f5c3f22b672d5c76a1653d7ed0478fdcf7542334f77a7b0c108b74dea5ee276b3f951253d52e73e34b9ef52e38ab8e5fecf8a84db2377f50529aca54da8a9d2b9e9c8e287ec117e967bd3b741dda6c8637ddad276b39f4820b83d2f4d0265563d7582ed1e94c0f408521da0025d613a006bf3b33946c465b89677c74",
    @"00020000",
    @"256bytes",
    @"00010000000100016e0967bfaead620f0c246db4a52a20e8777f2d4d24a78fd9929d1aa7e556501f774008537b375bbf2e66834b5138897e41dbb73ab9f171d825f8304f7788ba0a7f3d45fc005d8d702077afcb8ff72cb98893ca6e51ddb01ba84036bb135083c508530bb1b1d85bccfb228e5486a6aec305e966dc535e594cb68abb7e8725f9f0f49c38fef69c79ff92943d9f2a231c15762993f186ac19361141b3a60fabdb59b6ef8492efef60edcc63adca215771e96b9fcc9d777fbf588af57f74eafcf3f69b3824dbb54629ac6bc5cc3f27ca197dcfdfaaa31946cbb5a09028791521071d558f5168edce7d13ec54c5c5995a5d253fe3ea8ce37c4d6d5e388332495395",
    @"00020000",
    @"262bytes",
    @"00010000000106016e0967bfaead620f0c246db4a52a20e8777f2d4d24a78fd9929d1aa7e556501f774008537b375bbf2e66834b5138897e41dbb73ab9f171d825f8304f7788ba0a7f3d45fc005d8d702077afcb8ff72cb98893ca6e51ddb01ba84036bb135083c508530bb1b1d85bccfb228e5486a6aec305e966dc535e594cb68abb7e8725f9f0f49c38fef69c79ff92943d9f2a231c15762993f186ac19361141b3a60fabdb59b6ef8492efef60edcc63adca215771e96b9fcc9d777fbf588af57f74eafcf3f69b3824dbb54629ac6bc5cc3f27ca197dcfdfaaa31946cbb5a09028791521071d558f5168edce7d13ec54c5c5995a5d253fe3ea8ce37c4d6d5e388332495395112233445566",
    @"00020000",
    @"300bytes",
    @"0001000000012Cff
    @"00020000",
    @"512bytes",
    @"00010000000200016e0967bfaead620f0c246db4a52a20e8777f2d4d24a78fd9929d1aa7e556501f774008537b375bbf2e66834b5138897e41dbb73ab9f171d825f8304f7788ba0a7f3d45fc005d8d702077afcb8ff72cb98893ca6e51ddb01ba84036bb135083c508530bb1b1d85bccfb228e5486a6aec305e966dc535e594cb68abb7e8725f9f0f49c38fef69c79ff92943d9f2a231c15762993f186ac19361141b3a60fabdb59b6ef8492efef60edcc63adca215771e96b9fcc9d777fbf588af57f74eafcf3f69b3824dbb54629ac6bc5cc3f27ca197dcfdfaaa31946cbb5a09028791521071d558f5168edce7d13ec54c5c5995a5d253fe3ea8ce37c4d6d5e388332495395016e0967bfaead620f0c246db4a52a20e8777f2d4d24a78fd9929d1aa7e556501f774008537b375bbf2e66834b5138897e41dbb73ab9f171d825f8304f7788ba0a7f3d45fc005d8d702077afcb8ff72cb98893ca6e51ddb01ba84036bb135083c508530bb1b1d85bccfb228e5486a6aec305e966dc535e594cb68abb7e8725f9f0f49c38fef69c79ff92943d9f2a231c15762993f186ac19361141b3a60fabdb59b6ef8492efef60edcc63adca215771e96b9fcc9d777fbf588af57f74eafcf3f69b3824dbb54629ac6bc5cc3f27ca197dcfdfaaa31946cbb5a09028791521071d558f5168edce7d13ec54c5c5995a5d253fe3ea8ce37c4d6d5e388332495395",
    @"00020000",
    @"1024bytes",
    @"00010000000400016e0967bfaead620f0c246db4a52a20e8777f2d4d24a78fd9929d1aa7e556501f774008537b375bbf2e66834b5138897e41dbb73ab9f171d825f8304f7788ba0a7f3d45fc005d8d702077afcb8ff72cb98893ca6e51ddb01ba84036bb135083c508530bb1b1d85bccfb228e5486a6aec305e966dc535e594cb68abb7e8725f9f0f49c38fef69c79ff92943d9f2a231c15762993f186ac19361141b3a60fabdb59b6ef8492efef60edcc63adca215771e96b9fcc9d777fbf588af57f74eafcf3f69b3824dbb54629ac6bc5cc3f27ca197dcfdfaaa31946cbb5a09028791521071d558f5168edce7d13ec54c5c5995a5d253fe3ea8ce37c4d6d5e388332495395016e0967bfaead620f0c246db4a52a20e8777f2d4d24a78fd9929d1aa7e556501f774008537b375bbf2e66834b5138897e41dbb73ab9f171d825f8304f7788ba0a7f3d45fc005d8d702077afcb8ff72cb98893ca6e51ddb01ba84036bb135083c508530bb1b1d85bccfb228e5486a6aec305e966dc535e594cb68abb7e8725f9f0f49c38fef69c79ff92943d9f2a231c15762993f186ac19361141b3a60fabdb59b6ef8492efef60edcc63adca215771e96b9fcc9d777fbf588af57f74eafcf3f69b3824dbb54629ac6bc5cc3f27ca197dcfdfaaa31946cbb5a09028791521071d558f5168edce7d13ec54c5c5995a5d253fe3ea8ce37c4d6d5e388332495395016e0967bfaead620f0c246db4a52a20e8777f2d4d24a78fd9929d1aa7e556501f774008537b375bbf2e66834b5138897e41dbb73ab9f171d825f8304f7788ba0a7f3d45fc005d8d702077afcb8ff72cb98893ca6e51ddb01ba84036bb135083c508530bb1b1d85bccfb228e5486a6aec305e966dc535e594cb68abb7e8725f9f0f49c38fef69c79ff92943d9f2a231c15762993f186ac19361141b3a60fabdb59b6ef8492efef60edcc63adca215771e96b9fcc9d777fbf588af57f74eafcf3f69b3824dbb54629ac6bc5cc3f27ca197dcfdfaaa31946cbb5a09028791521071d558f5168edce7d13ec54c5c5995a5d253fe3ea8ce37c4d6d5e388332495395016e0967bfaead620f0c246db4a52a20e8777f2d4d24a78fd9929d1aa7e556501f774008537b375bbf2e66834b5138897e41dbb73ab9f171d825f8304f7788ba0a7f3d45fc005d8d702077afcb8ff72cb98893ca6e51ddb01ba84036bb135083c508530bb1b1d85bccfb228e5486a6aec305e966dc535e594cb68abb7e8725f9f0f49c38fef69c79ff92943d9f2a231c15762993f186ac19361141b3a60fabdb59b6ef8492efef60edcc63adca215771e96b9fcc9d777fbf588af57f74eafcf3f69b3824dbb54629ac6bc5cc3f27ca197dcfdfaaa31946cbb5a09028791521071d558f5168edce7d13ec54c5c5995a5d253fe3ea8ce37c4d6d5e388332495395",
    @"00020000",
    @"2048bytes",

      @"00010000000800016e0967bfaead620f0c246db4a52a20e8777f2d4d24a78fd9929d1aa7e556501f774008537b375bbf2e66834b5138897e41dbb73ab9f171d825f8304f7788ba0a7f3d45fc005d8d702077afcb8ff72cb98893ca6e51ddb01ba84036bb135083c508530bb1b1d85bccfb228e5486a6aec305e966dc535e594cb68abb7e8725f9f0f49c38fef69c79ff92943d9f2a231c15762993f186ac19361141b3a60fabdb59b6ef8492efef60edcc63adca215771e96b9fcc9d777fbf588af57f74eafcf3f69b3824dbb54629ac6bc5cc3f27ca197dcfdfaaa31946cbb5a09028791521071d558f5168edce7d13ec54c5c5995a5d253fe3ea8ce37c4d6d5e388332495395016e0967bfaead620f0c246db4a52a20e8777f2d4d24a78fd9929d1aa7e556501f774008537b375bbf2e66834b5138897e41dbb73ab9f171d825f8304f7788ba0a7f3d45fc005d8d702077afcb8ff72cb98893ca6e51ddb01ba84036bb135083c508530bb1b1d85bccfb228e5486a6aec305e966dc535e594cb68abb7e8725f9f0f49c38fef69c79ff92943d9f2a231c15762993f186ac19361141b3a60fabdb59b6ef8492efef60edcc63adca215771e96b9fcc9d777fbf588af57f74eafcf3f69b3824dbb54629ac6bc5cc3f27ca197dcfdfaaa31946cbb5a09028791521071d558f5168edce7d13ec54c5c5995a5d253fe3ea8ce37c4d6d5e388332495395016e0967bfaead620f0c246db4a52a20e8777f2d4d24a78fd9929d1aa7e556501f774008537b375bbf2e66834b5138897e41dbb73ab9f171d825f8304f7788ba0a7f3d45fc005d8d702077afcb8ff72cb98893ca6e51ddb01ba84036bb135083c508530bb1b1d85bccfb228e5486a6aec305e966dc535e594cb68abb7e8725f9f0f49c38fef69c79ff92943d9f2a231c15762993f186ac19361141b3a60fabdb59b6ef8492efef60edcc63adca215771e96b9fcc9d777fbf588af57f74eafcf3f69b3824dbb54629ac6bc5cc3f27ca197dcfdfaaa31946cbb5a09028791521071d558f5168edce7d13ec54c5c5995a5d253fe3ea8ce37c4d6d5e388332495395016e0967bfaead620f0c246db4a52a20e8777f2d4d24a78fd9929d1aa7e556501f774008537b375bbf2e66834b5138897e41dbb73ab9f171d825f8304f7788ba0a7f3d45fc005d8d702077afcb8ff72cb98893ca6e51ddb01ba84036bb135083c508530bb1b1d85bccfb228e5486a6aec305e966dc535e594cb68abb7e8725f9f0f49c38fef69c79ff92943d9f2a231c15762993f186ac19361141b3a60fabdb59b6ef8492efef60edcc63adca215771e96b9fcc9d777fbf588af57f74eafcf3f69b3824dbb54629ac6bc5cc3f27ca197dcfdfaaa31946cbb5a09028791521071d558f5168edce7d13ec54c5c5995a5d253fe3ea8ce37c4d6d5e388332495395016e0967bfaead620f0c246db4a52a20e8777f2d4d24a78fd9929d1aa7e556501f774008537b375bbf2e66834b5138897e41dbb73ab9f171d825f8304f7788ba0a7f3d45fc005d8d702077afcb8ff72cb98893ca6e51ddb01ba84036bb135083c508530bb1b1d85bccfb228e5486a6aec305e966dc535e594cb68abb7e8725f9f0f49c38fef69c79ff92943d9f2a231c15762993f186ac19361141b3a60fabdb59b6ef8492efef60edcc63adca215771e96b9fcc9d777fbf588af57f74eafcf3f69b3824dbb54629ac6bc5cc3f27ca197dcfdfaaa31946cbb5a09028791521071d558f5168edce7d13ec54c5c5995a5d253fe3ea8ce37c4d6d5e388332495395016e0967bfaead620f0c246db4a52a20e8777f2d4d24a78fd9929d1aa7e556501f774008537b375bbf2e66834b5138897e41dbb73ab9f171d825f8304f7788ba0a7f3d45fc005d8d702077afcb8ff72cb98893ca6e51ddb01ba84036bb135083c508530bb1b1d85bccfb228e5486a6aec305e966dc535e594cb68abb7e8725f9f0f49c38fef69c79ff92943d9f2a231c15762993f186ac19361141b3a60fabdb59b6ef8492efef60edcc63adca215771e96b9fcc9d777fbf588af57f74eafcf3f69b3824dbb54629ac6bc5cc3f27ca197dcfdfaaa31946cbb5a09028791521071d558f5168edce7d13ec54c5c5995a5d253fe3ea8ce37c4d6d5e388332495395016e0967bfaead620f0c246db4a52a20e8777f2d4d24a78fd9929d1aa7e556501f774008537b375bbf2e66834b5138897e41dbb73ab9f171d825f8304f7788ba0a7f3d45fc005d8d702077afcb8ff72cb98893ca6e51ddb01ba84036bb135083c508530bb1b1d85bccfb228e5486a6aec305e966dc535e594cb68abb7e8725f9f0f49c38fef69c79ff92943d9f2a231c15762993f186ac19361141b3a60fabdb59b6ef8492efef60edcc63adca215771e96b9fcc9d777fbf588af57f74eafcf3f69b3824dbb54629ac6bc5cc3f27ca197dcfdfaaa31946cbb5a09028791521071d558f5168edce7d13ec54c5c5995a5d253fe3ea8ce37c4d6d5e388332495395016e0967bfaead620f0c246db4a52a20e8777f2d4d24a78fd9929d1aa7e556501f774008537b375bbf2e66834b5138897e41dbb73ab9f171d825f8304f7788ba0a7f3d45fc005d8d702077afcb8ff72cb98893ca6e51ddb01ba84036bb135083c508530bb1b1d85bccfb228e5486a6aec305e966dc535e594cb68abb7e8725f9f0f49c38fef69c79ff92943d9f2a231c15762993f186ac19361141b3a60fabdb59b6ef8492efef60edcc63adca215771e96b9fcc9d777fbf588af57f74eafcf3f69b3824dbb54629ac6bc5cc3f27ca197dcfdfaaa31946cbb5a09028791521071d558f5168edce7d13ec54c5c5995a5d253fe3ea8ce37c4d6d5e388332495395",
    @"00020000",
    @"好的之com",
    @"00A40400050102030405" ,
    @"8010007000" ,
    @"8010012100",
    @"好的之长返回",
    @"00A404000A01020304050607080900",
    @"80200000EE" ,
    @"80200000EF" ,
    @"80200000F0" ,
    @"80200000F1" ,
    @"80200000FE" ,
    @"80200000FF" ,
    @"801000e3000000",
    @"802000000003e3",
    @"801000f100",
    @"好的之超时0--0x40",
    @"00A404000A01020304050607081000",
    @"8010000000" ,
    @"8010000100" ,
    @"8010000200" ,
    @"8010000300" ,
    @"8010004000" ,
    @"Mifare 1k card",
    @"FF82000106FFFFFFFFFFFF" ,
    @"FF860000050100016000" ,
    @"FFB0000210" ,
    @"FFD600021011223344556677889900AABBCCDDEEFF" ,
    @"FFD600021001000000FEFFFFFF0100000001FE01FE" ,
    @"压力测试卡",

@"007700000004005198ACAA3574C9815E246CBA92328EB4BE9DB925D26A78BCD25B0D052AFF618C43EB41455346C62B798B1528098A493525B0AEC28D893058B783137D23F5E4D8E95FAF9594F4720B3255D29CACA00DDD54A930F7BD878A4ECF5360601A2CE2EF6B7E5E629D84B469B20C0AE0237BC0F67310A68E0A6D6DE541535C75BAAD441AF2D0B6741901738C213724BA15234CC6AC6E7A4D1E42C366360B6F86A87FF3A1A6DC2092AE7099BDA65F8AF32AA19796254A13FD9E0E7319D50402598FAAD6CCAE2A028604DB0D44690BA3530BFC8BAD062CD96635D9654647C57BB81537D4E23242C516C449B76993C3D7A1603C0F55789C344F89AC8135B3D64469E22DD72D5CADD20B96C37F744C108EA7D06A0AD4A3238C81428EAF2E42C0C3349F94C6F352F2902C21504DACBB78302B048C6673AE4849C50988D7781C0A62E3F474887D3C9966430EF8095A098525F6A4AD0A7AC194D3E186A1E15C683C883C88D60713432ABE1604C39BC65DBFD6D057D2DE31068E939D60E1B5224FDF9C0904C12AFD8F2EFF6FACBAEB38E0ADA980C505CADFA2BEEFC33F503B12F87A08100F3ED982472D9014AEE4E2F8BAD707D0974DB6CEC0AC5019CDF75C738B95331A5254FCEB93ADDBCDB14A664D12C5598675B38A4486E11F69AFDDFE8F32B885EE750B7C809C3847645DF260811000056B063D2E8A1CE4C279900A0AAC136C66561F6B3F898A553C9F5CE6B9DADE0F7547F3F58AE8AB3DA3111687691356383E18F87D2E4E858D2248532E57A1A17A0FE2E3E387A55B7528FBE95B010C24A575FDA9483117B4666225EDD0241D84CA3D037F0E0B0B5313BBFEB28EBCDEA53A73CDDAD4312B3F6A62FFD0D60798AC8666746F7EFF60BC9FC3E1192981D3007FA150322A14D34F218B9DA447E7584436F1FB5A3B4CEDBDA1A86DC53337315EFC654D5A51C4570C1245C9122CAEA672624861E94ED8FA7FA2D16A5FB4C841E63A288EFA5127FF9DC5F949C18C43CA5E93D26DC3BE8DCF2A2AA8A08EB51B4BC1C053D9B93327122AC20DE65B6F8E0C3250F7E9909352B3E5BF94D6FB3C189716164CF73FFEABDADD92EB6885DE77B413221F9BFAD50EF0D8EBFDD64E54A76C0EC57DB035BA9A9DDCBCF997E9DFE6092B90B24DA78DABCC2C354B662E02B014D1544CCB4370DEA44FC8A13B2F7DC354A22218C53FC310900925E74F43501BD5864B231210275E375F3E4A1BFFBDF6DDA060BACC6B7D2583964437583645D0F85533694B45E7029E33A75B00FFA967EC4CD3FE29D3C5D2EFFC19A44BAFE9B8C46792863F89B8B220F58B3EB2DA48FFC9CE024DA61EA2FF1A622D97EF5545B983E4F3E2B685A35606CA705AF936A2A4BC4F751009F41D944DF106760BD160BC7BF4DBE578E1AFD699DCE0179DBCC03F0CF7B5AD1BFF3C79D0D12EAA68CA43AAF6BDD4F74C44E51A1E",


      
      @"test_battery",
       */
    ];
}

-(NSString *)mapErrorCode:(LONG)ret {
    
    NSString *info = @"success";
    
    switch (ret) {
        case SCARD_E_INVALID_HANDLE:
            info = [NSString stringWithFormat:@"0x%08x:The supplied handle was invalid.", ret];
            break;
            
        case SCARD_E_INVALID_PARAMETER:
            info = [NSString stringWithFormat:@"0x%08x:One or more of the supplied parameters could not be properly interpreted.", ret];
            break;
            
        case SCARD_E_INSUFFICIENT_BUFFER:
            info = [NSString stringWithFormat:@"0x%08x:The data buffer to receive returned data is too small for the returned data.", ret];
            break;
            
        case SCARD_E_TIMEOUT:
            info = [NSString stringWithFormat:@"0x%08x:The user-specified timeout value has expired. ", ret];
            break;
            
        case SCARD_E_NO_SMARTCARD:
            info = [NSString stringWithFormat:@"0x%08x:The operation requires a Smart Card, but no Smart Card is currently in the device.", ret];
            break;
            
        case SCARD_E_INVALID_VALUE:
            info = [NSString stringWithFormat:@"0x%08x:One or more of the supplied parameters values could not be properly interpreted.", ret];
            break;
            
        case SCARD_F_COMM_ERROR:
            info = [NSString stringWithFormat:@"0x%08x:An internal communications error has been detected.", ret];
            break;
            
        case SCARD_E_NOT_TRANSACTED:
            info = [NSString stringWithFormat:@"0x%08x:An attempt was made to end a non-existent transaction.", ret];
            break;
            
        case SCARD_E_READER_UNAVAILABLE:
            info = [NSString stringWithFormat:@"0x%08x:The specified reader is not currently available for use.", ret];
            break;
            
        case SCARD_E_READER_UNSUPPORTED:
            info = [NSString stringWithFormat:@"0x%08x:The reader driver does not meet minimal requirements for support.", ret];
            break;
            
        case SCARD_E_CARD_UNSUPPORTED:
            info = [NSString stringWithFormat:@"0x%08x:The smart card does not meet minimal requirements for support.", ret];
            break;
            
        default:
            info = [NSString stringWithFormat:@"0x%08x:Unknown error", ret];
            break;
    }
    
    return info;
}

-(BOOL)iPhonexSerial
{
    CGFloat height = [UIScreen mainScreen].bounds.size.height;
    
    if (height == 812 || height == 896) {
        return YES;
    }
    
    return NO;
}

@end
