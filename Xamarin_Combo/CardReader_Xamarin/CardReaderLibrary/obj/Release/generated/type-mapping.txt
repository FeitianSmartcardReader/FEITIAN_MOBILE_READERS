com/ftsafe/cardreader/library/BuildConfig = Com.Ftsafe.Cardreader.Library.BuildConfig
  <init>()V = .ctor()
  BUILD_TYPE = BuildType
  DEBUG = Debug
  LIBRARY_PACKAGE_NAME = LibraryPackageName
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/ftsafe/cardreader/library/R = Com.Ftsafe.Cardreader.Library.R
com/ftsafe/comm/bt3/BT3 = Com.Ftsafe.Comm.Bt3.BT3
  <init>(Landroid/content/Context;Lcom/ftsafe/comm/CommBase$CommCallback;)V = .ctor(Android.Content.Context, Com.Ftsafe.Comm.CommBase.ICommCallback)
  BT_NAME = BtName
  BT_NAME_1 = BtName1
  ft_close()V = Ft_close()
  ft_control(IIIIII)[B = Ft_control(int, int, int, int, int, int)
  ft_find()V = Ft_find()
  ft_open(Ljava/lang/Object;)V = Ft_open(Java.Lang.Object)
  ft_recv(II)[B = Ft_recv(int, int)
  ft_send(I[BI)V = Ft_send(int, byte[], int)
  isFtExist()Ljava/lang/Boolean; = IsFtExist()
  stopScan()V = StopScan()
com/ftsafe/comm/bt3/Bt3Exception = Com.Ftsafe.Comm.Bt3.Bt3Exception
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
com/ftsafe/comm/bt4/BluetoothLeClass = Com.Ftsafe.Comm.Bt4.BluetoothLeClass
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  UUID_CHAR_FIRMWARE_VERSION_C4 = UuidCharFirmwareVersionC4
  UUID_CHAR_FIRMWARE_VERSION_C4_CORILUS = UuidCharFirmwareVersionC4Corilus
  UUID_CHAR_FIRMWARE_VERSION_C6 = UuidCharFirmwareVersionC6
  UUID_CHAR_NOTIF_C4 = UuidCharNotifC4
  UUID_CHAR_NOTIF_C4_CORILUS = UuidCharNotifC4Corilus
  UUID_CHAR_NOTIF_C6 = UuidCharNotifC6
  UUID_CHAR_WRITE_C4 = UuidCharWriteC4
  UUID_CHAR_WRITE_C4_CORILUS = UuidCharWriteC4Corilus
  UUID_CHAR_WRITE_C6 = UuidCharWriteC6
  UUID_DESC_NOTIF = UuidDescNotif
  UUID_SERVICE_C4 = UuidServiceC4
  UUID_SERVICE_C4_CORILUS = UuidServiceC4Corilus
  UUID_SERVICE_C4_NEW = UuidServiceC4New
  UUID_SERVICE_C6 = UuidServiceC6
  UUID_SERVICE_C6_NEW = UuidServiceC6New
  UUID_SERVICE_FIRMWARE_VERSION_C4 = UuidServiceFirmwareVersionC4
  UUID_SERVICE_FIRMWARE_VERSION_C4_CORILUS = UuidServiceFirmwareVersionC4Corilus
  UUID_SERVICE_FIRMWARE_VERSION_C6 = UuidServiceFirmwareVersionC6
  getBleFirmwareVersion()Z = BleFirmwareVersion
  getBluetoothGatt()Landroid/bluetooth/BluetoothGatt; = BluetoothGatt
  getSupportedGattServices()Ljava/util/List; = SupportedGattServices
  close()V = Close()
  connect(Ljava/lang/String;)Z = Connect(string)
  disconnect()V = Disconnect()
  initialize()Z = Initialize()
  readCharacteristic(Landroid/bluetooth/BluetoothGattCharacteristic;)V = ReadCharacteristic(Android.Bluetooth.BluetoothGattCharacteristic)
  setCharacteristicNotification(Z)Z = SetCharacteristicNotification(bool)
  setOnConnectListener(Lcom/ftsafe/comm/bt4/BluetoothLeClass$OnConnectListener;)V = SetOnConnectListener(Com.Ftsafe.Comm.Bt4.BluetoothLeClass.IOnConnectListener)
  setOnDataAvailableListener(Lcom/ftsafe/comm/bt4/BluetoothLeClass$OnDataAvailableListener;)V = SetOnDataAvailableListener(Com.Ftsafe.Comm.Bt4.BluetoothLeClass.IOnDataAvailableListener)
  setOnDisconnectListener(Lcom/ftsafe/comm/bt4/BluetoothLeClass$OnDisconnectListener;)V = SetOnDisconnectListener(Com.Ftsafe.Comm.Bt4.BluetoothLeClass.IOnDisconnectListener)
  setOnServiceDiscoverListener(Lcom/ftsafe/comm/bt4/BluetoothLeClass$OnServiceDiscoverListener;)V = SetOnServiceDiscoverListener(Com.Ftsafe.Comm.Bt4.BluetoothLeClass.IOnServiceDiscoverListener)
  writeCharacteristic(Landroid/bluetooth/BluetoothGattCharacteristic;)V = WriteCharacteristic(Android.Bluetooth.BluetoothGattCharacteristic)
  writeCharacteristic([B)Z = WriteCharacteristic(byte[])
com/ftsafe/comm/bt4/BT4 = Com.Ftsafe.Comm.Bt4.BT4
  <init>(Landroid/content/Context;Lcom/ftsafe/comm/CommBase$CommCallback;)V = .ctor(Android.Content.Context, Com.Ftsafe.Comm.CommBase.ICommCallback)
  ft_close()V = Ft_close()
  ft_control(IIIIII)[B = Ft_control(int, int, int, int, int, int)
  ft_find()V = Ft_find()
  ft_open(Ljava/lang/Object;)V = Ft_open(Java.Lang.Object)
  ft_recv(II)[B = Ft_recv(int, int)
  ft_send(I[BI)V = Ft_send(int, byte[], int)
  getBleFirmwareVersion()[B = GetBleFirmwareVersion()
  isFtExist()Ljava/lang/Boolean; = IsFtExist()
  stopScan()V = StopScan()
com/ftsafe/comm/bt4/Bt4Exception = Com.Ftsafe.Comm.Bt4.Bt4Exception
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
com/ftsafe/comm/bt4/MyArrayList = Com.Ftsafe.Comm.Bt4.MyArrayList
  <init>()V = .ctor()
  add(Ljava/lang/Object;)Z = Add(Java.Lang.Object)
  resetTimer(Ljava/lang/Object;)V = ResetTimer(Java.Lang.Object)
com/ftsafe/comm/CommBase = Com.Ftsafe.Comm.CommBase
  <init>()V = .ctor()
  <init>(ILandroid/content/Context;Landroid/os/Handler;)V = .ctor(int, Android.Content.Context, Android.OS.Handler)
  getBleFirmwareVersion()I = BleFirmwareVersion
  getCCIDDescriptorDwFeatures()I = CCIDDescriptorDwFeatures
  getDevType()I = DevType
  byteArrayToInt([B)I = ByteArrayToInt(byte[])
  getUSBManufacturer()[B = GetUSBManufacturer()
  getUSBReaderName()[B = GetUSBReaderName()
  getUSBSlotName()[Ljava/lang/String; = GetUSBSlotName()
  isTPDUReader()I = IsTPDUReader()
  isTPDUReader_check_by_version()I = IsTPDUReader_check_by_version()
  readData(II[B[I)I = ReadData(int, int, byte[], int[])
  readerClose()I = ReaderClose()
  readerEscape(I[B)[B = ReaderEscape(int, byte[])
  readerFind()I = ReaderFind()
  readerGetBcdDevice()I = ReaderGetBcdDevice()
  readerGetFirmwareVersion()[B = ReaderGetFirmwareVersion()
  readerGetPid()I = ReaderGetPid()
  readerOpen([B[I)I = ReaderOpen(byte[], int[])
  readerOpen(Ljava/lang/Object;)[Ljava/lang/String; = ReaderOpen(Java.Lang.Object)
  readerPowerOff(I)V = ReaderPowerOff(int)
  readerPowerOn(II)[B = ReaderPowerOn(int, int)
  readerSlotStatus(I)I = ReaderSlotStatus(int)
  readerXfrBlock(I[B)[B = ReaderXfrBlock(int, byte[])
  uninit()V = Uninit()
  writeData(I[BI)I = WriteData(int, byte[], int)
com/ftsafe/comm/LeBluetoothParsedScanRecord = Com.Ftsafe.Comm.LeBluetoothParsedScanRecord
  BASE_UUID = BaseUuid
  UUID_BYTES_128_BIT = UuidBytes128Bit
  UUID_BYTES_16_BIT = UuidBytes16Bit
  UUID_BYTES_32_BIT = UuidBytes32Bit
  getAdvertiseFlags()I = AdvertiseFlags
  getDeviceName()Ljava/lang/String; = DeviceName
  getManufacturerSpecificData()Landroid/util/SparseArray; = ManufacturerSpecificData
  getServiceData()Ljava/util/Map; = ServiceData
  getServiceUuids()Ljava/util/List; = ServiceUuids
  getTxPowerLevel()I = TxPowerLevel
  getBytes()[B = GetBytes()
  getManufacturerSpecificData(I)[B = GetManufacturerSpecificData(int)
  getServiceData(Landroid/os/ParcelUuid;)[B = GetServiceData(Android.OS.ParcelUuid)
  parseFromBytes([B)Lcom/ftsafe/comm/LeBluetoothParsedScanRecord; = ParseFromBytes(byte[])
  parseUuidFrom([B)Landroid/os/ParcelUuid; = ParseUuidFrom(byte[])
com/ftsafe/comm/StrUtil = Com.Ftsafe.Comm.StrUtil
  <init>()V = .ctor()
  byte2HexStr(B)Ljava/lang/String; = Byte2HexStr(sbyte)
  byte2int([B)I = Byte2int(byte[])
  byteArr2HexStr([B)Ljava/lang/String; = ByteArr2HexStr(byte[])
  byteArr2HexStr([BII)Ljava/lang/String; = ByteArr2HexStr(byte[], int, int)
  byteArr2HexStr([BIILjava/lang/String;)Ljava/lang/String; = ByteArr2HexStr(byte[], int, int, string)
  byteArr2HexStr([BILjava/lang/String;)Ljava/lang/String; = ByteArr2HexStr(byte[], int, string)
  byteArr2HexStr([BLjava/lang/String;)Ljava/lang/String; = ByteArr2HexStr(byte[], string)
  byteArr2Int([BII)I = ByteArr2Int(byte[], int, int)
  compare(Ljava/util/List;Ljava/util/List;)Z = Compare(System.Collections.IList, System.Collections.IList)
  hexChar2Byte(C)B = HexChar2Byte(char)
  hexStr2Byte(Ljava/lang/String;)B = HexStr2Byte(string)
  hexStr2ByteArr(Ljava/lang/String;)[B = HexStr2ByteArr(string)
  int2byte(I)[B = Int2byte(int)
  toString(Landroid/util/SparseArray;)Ljava/lang/String; = ToString(Android.Util.SparseArray)
  toString(Ljava/util/Map;)Ljava/lang/String; = ToString(System.Collections.IDictionary)
com/ftsafe/comm/usb/CCIDDescriptor = Com.Ftsafe.Comm.Usb.CCIDDescriptor
  <init>()V = .ctor()
  CCID_HEAD_LEN = CcidHeadLen
  DW_FEATURES_INDEX = DwFeaturesIndex
  DW_FEATURES_LEN = DwFeaturesLen
  DW_PROTOCOLS_INDEX = DwProtocolsIndex
  DW_PROTOCOLS_LEN = DwProtocolsLen
  getDwFeatures()[B = GetDwFeatures()
  getDwProtocols()[B = GetDwProtocols()
  parse([BII)V = Parse(byte[], int, int)
com/ftsafe/comm/usb/USB = Com.Ftsafe.Comm.Usb.USB
  <init>(Landroid/content/Context;Lcom/ftsafe/comm/CommBase$CommCallback;)V = .ctor(Android.Content.Context, Com.Ftsafe.Comm.CommBase.ICommCallback)
  mUsbDevice = MUsbDevice
  mUsbDeviceConnection = MUsbDeviceConnection
  getProductName()Ljava/lang/String; = ProductName
  getSlotIndex()I = SlotIndex
  setSlotIndex(I)V = SlotIndex
  ft_close()V = Ft_close()
  ft_control(IIIIII)[B = Ft_control(int, int, int, int, int, int)
  ft_find()V = Ft_find()
  ft_open(Ljava/lang/Object;)V = Ft_open(Java.Lang.Object)
  ft_recv(II)[B = Ft_recv(int, int)
  ft_send(I[BI)V = Ft_send(int, byte[], int)
  isFtExist()Ljava/lang/Boolean; = IsFtExist()
com/ftsafe/comm/usb/UsbException = Com.Ftsafe.Comm.Usb.UsbException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
com/ftsafe/comm/usb/USBParse = Com.Ftsafe.Comm.Usb.USBParse
  <init>()V = .ctor()
  getCCIDDescriptorList([B)Ljava/util/List; = GetCCIDDescriptorList(byte[])
  getInterfaceIndexFromRawDescriptor([B)[I = GetInterfaceIndexFromRawDescriptor(byte[])
com/ftsafe/DK = Com.Ftsafe.DK
  <init>()V = .ctor()
  BT3_DISCONNECTED = Bt3Disconnected
  BT3_LOG = Bt3Log
  BT3_NEW = Bt3New
  BT4_ACL_DISCONNECTED = Bt4AclDisconnected
  BT4_CONNECTED = Bt4Connected
  BT4_LOG = Bt4Log
  BT4_NEW = Bt4New
  CARD_IN_MASK = CardInMask
  CARD_NO_PRESENT = CardNoPresent
  CARD_OUT_MASK = CardOutMask
  CARD_PRESENT_ACTIVE = CardPresentActive
  CARD_PRESENT_INACTIVE = CardPresentInactive
  CCIDSCHEME_LOG = CcidschemeLog
  FTREADER_LOG = FtreaderLog
  FTREADER_TYPE_BT3 = FtreaderTypeBt3
  FTREADER_TYPE_BT4 = FtreaderTypeBt4
  FTREADER_TYPE_USB = FtreaderTypeUsb
  PCSCSERVER_LOG = PcscserverLog
  READER_BR301 = ReaderBr301
  READER_BR301FC4 = ReaderBr301fc4
  READER_BR500 = ReaderBr500
  READER_IR301 = ReaderIr301
  READER_IR301_LT = ReaderIr301Lt
  READER_R301E = ReaderR301e
  READER_R502_C9_U01 = ReaderR502C9U01
  READER_R502_C9_U02 = ReaderR502C9U02
  READER_R502_C9_U10 = ReaderR502C9U10
  READER_R502_C9_U11 = ReaderR502C9U11
  READER_R502_C9_U12 = ReaderR502C9U12
  READER_R502_CL = ReaderR502Cl
  READER_R502_DUAL = ReaderR502Dual
  READER_UNKNOWN = ReaderUnknown
  READER_VR504 = ReaderVr504
  USB_IN = UsbIn
  USB_LOG = UsbLog
  USB_OUT = UsbOut
com/ftsafe/ftnative/FTNative = Com.Ftsafe.Ftnative.FTNative
  <init>()V = .ctor()
  init(Lcom/ftsafe/comm/CommBase;)V = Init(Com.Ftsafe.Comm.CommBase)
  readerEscape(I[BI[B[I)I = ReaderEscape(int, byte[], int, byte[], int[])
  readerGetFirmwareVersion([B[I)I = ReaderGetFirmwareVersion(byte[], int[])
  readerGetSlotStatus(I[I)I = ReaderGetSlotStatus(int, int[])
  readerPowerOff(I)I = ReaderPowerOff(int)
  readerPowerOn(I[B[II)I = ReaderPowerOn(int, byte[], int[], int)
  readerXfrBlock(I[BI[B[I)I = ReaderXfrBlock(int, byte[], int, byte[], int[])
  uninit()V = Uninit()
com/ftsafe/readerScheme/FTException = Com.Ftsafe.ReaderScheme.FTException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
com/ftsafe/readerScheme/FTReader = Com.Ftsafe.ReaderScheme.FTReader
  <init>(Landroid/content/Context;Landroid/os/Handler;I)V = .ctor(Android.Content.Context, Android.OS.Handler, int)
  getBleFirmwareVersion()Ljava/lang/String; = BleFirmwareVersion
  FT_AutoTurnOffReader(Z)[B = FT_AutoTurnOffReader(bool)
  readerClose()V = ReaderClose()
  readerEscape(I[B)[B = ReaderEscape(int, byte[])
  readerFind()V = ReaderFind()
  readerGetFirmwareVersion()Ljava/lang/String; = ReaderGetFirmwareVersion()
  readerGetHardwareInfo()[B = ReaderGetHardwareInfo()
  readerGetLibVersion()Ljava/lang/String; = ReaderGetLibVersion()
  readerGetManufacturer()[B = ReaderGetManufacturer()
  readerGetReaderName()[B = ReaderGetReaderName()
  readerGetSerialNumber()[B = ReaderGetSerialNumber()
  readerGetSlotStatus(I)I = ReaderGetSlotStatus(int)
  readerGetType()I = ReaderGetType()
  readerGetUID()[B = ReaderGetUID()
  readerOpen(Ljava/lang/Object;)[Ljava/lang/String; = ReaderOpen(Java.Lang.Object)
  readerPowerOff(I)V = ReaderPowerOff(int)
  readerPowerOn(I)[B = ReaderPowerOn(int)
  readerXfr(I[B)[B = ReaderXfr(int, byte[])
com/ftsafe/readerScheme/FTReaderInf = Com.Ftsafe.ReaderScheme.IFTReaderInf
  ft_close()V = Ft_close()
  ft_control(IIIIII)[B = Ft_control(int, int, int, int, int, int)
  ft_find()V = Ft_find()
  ft_open(Ljava/lang/Object;)V = Ft_open(Java.Lang.Object)
  ft_recv(II)[B = Ft_recv(int, int)
  ft_send(I[BI)V = Ft_send(int, byte[], int)
  isFtExist()Ljava/lang/Boolean; = IsFtExist()
com/ftsafe/ui/SelectDeviceDialog = Com.Ftsafe.UI.SelectDeviceDialog
  <init>(Landroid/content/Context;Lcom/ftsafe/readerScheme/FTReader;Landroid/os/Handler;)V = .ctor(Android.Content.Context, Com.Ftsafe.ReaderScheme.FTReader, Android.OS.Handler)
  onCancel(Landroid/content/DialogInterface;)V = OnCancel(Android.Content.IDialogInterface)
  onClick(Landroid/view/View;)V = OnClick(Android.Views.View)
  onItemClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)V = OnItemClick(Android.Widget.AdapterView, Android.Views.View, int, long)
  onShow(Landroid/content/DialogInterface;)V = OnShow(Android.Content.IDialogInterface)
  setData(Landroid/bluetooth/BluetoothDevice;)V = SetData(Android.Bluetooth.BluetoothDevice)
com/ftsafe/util/LogUtil = Com.Ftsafe.Util.LogUtil
  <init>()V = .ctor()
  e(Ljava/lang/String;)V = E(string)
com/ftsafe/Utility = Com.Ftsafe.Utility
  <init>()V = .ctor()
  bytes2HexStr([B)Ljava/lang/String; = Bytes2HexStr(byte[])
  bytes2HexStr([BI)Ljava/lang/String; = Bytes2HexStr(byte[], int)
  hexStrToBytes(Ljava/lang/String;)[B = HexStrToBytes(string)
  hexStrToBytes(Ljava/lang/String;I)[B = HexStrToBytes(string, int)
